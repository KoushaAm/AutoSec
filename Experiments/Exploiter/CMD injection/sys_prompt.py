def read_source_code(file_path: str) -> str:
    try:
        with open(file_path, "r") as file:
            return file.read()
    except Exception as e:
        print(f"Error reading file {file_path}: {e}")
        return ""
    

def get_sys_prompt():
    source_code = read_source_code("Main.java")

    return """ Analyze this Java code vulnerability and write an exploit script without any additional description or explanation.

        Vulnerable Java code:
        """ + source_code + """

        Vulnerability: The code concatenates user input directly into a shell command without sanitization, allowing command injection through shell metacharacters like ;, &, |, or backticks.

        Write a Python exploit script that:
        1. Executes the Java program (the java code exists in Main.java in the same directory) use Javac to compile it and Java to run it

        2. Injects malicious commands through the filename input
        3. Captures and displays the command output
        4. Handles different operating systems
        5. Includes multiple exploitation examples

        Output only the Python code without any additional text.
        """