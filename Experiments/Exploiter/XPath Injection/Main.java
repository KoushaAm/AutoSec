import java.io.*;
import java.util.Scanner;
import javax.xml.xpath.*;
import org.xml.sax.InputSource;

public class Main {
    private static XPath xpath;
    private static Scanner scanner;
    
    public static void main(String[] args) {
        xpath = XPathFactory.newInstance().newXPath();
        scanner = new Scanner(System.in);
        
        createSampleXML();

        System.out.println("=== User Authentication System ===");
        System.out.println("Please login to continue...");
        
        // This looks like a normal login system but is vulnerable to XPATH injection
        vulnerableLoginSystem();
    }
    
    // VULNERABLE LOGIN SYSTEM - can be exploited to extract all passwords
      private static void vulnerableLoginSystem() {
        System.out.println("=== Vulnerable Login ===");
        System.out.print("Enter username: ");
        String username = scanner.nextLine();
        
        System.out.print("Enter password: ");
        String password = scanner.nextLine();
        
        try {
            // VULNERABLE: directly embedding user input into XPATH expression
            String expression = "//users/user[username='" + username + "' and password='" + password + "']";
            
            System.out.println("Generated XPATH: " + expression);
            
            InputSource source = new InputSource(new FileInputStream("users.xml"));
            
            // using different evaluation method that works better
            String result = (String) xpath.evaluate(expression, source, XPathConstants.STRING);
            
            if (result != null && !result.trim().isEmpty()) {
                System.out.println(result);
            } else {
                System.out.println("Login failed. Invalid username or password.");
            }
            
        } catch (Exception e) {
            System.out.println("Error: " + e.getMessage());
        }
    }
    
    
    private static void createSampleXML() {
        try {
            FileWriter writer = new FileWriter("users.xml");
            writer.write("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n");
            writer.write("<users>\n");
            writer.write("    <user id=\"1\">\n");
            writer.write("        <username>admin</username>\n");
            writer.write("        <password>SuperSecret123!</password>\n");
            writer.write("        <email>admin@company.com</email>\n");
            writer.write("        <role>admin</role>\n");
            writer.write("        <salary>75000</salary>\n");
            writer.write("    </user>\n");
            writer.write("    <user id=\"2\">\n");
            writer.write("        <username>john_doe</username>\n");
            writer.write("        <password>MyPassword456</password>\n");
            writer.write("        <email>john.doe@gmail.com</email>\n");
            writer.write("        <role>user</role>\n");
            writer.write("        <salary>55000</salary>\n");
            writer.write("    </user>\n");
            writer.write("    <user id=\"3\">\n");
            writer.write("        <username>jane_smith</username>\n");
            writer.write("        <password>JanePass789</password>\n");
            writer.write("        <email>jane.smith@yahoo.com</email>\n");
            writer.write("        <role>manager</role>\n");
            writer.write("        <salary>65000</salary>\n");
            writer.write("    </user>\n");
            writer.write("</users>");
            writer.close();
            
            System.out.println("Sample database created: users.xml");
            
        } catch (IOException e) {
            System.out.println("Error creating XML: " + e.getMessage());
        }
    }
}