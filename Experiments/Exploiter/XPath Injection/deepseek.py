import subprocess
import os

def compile_java():
    result = subprocess.run(['javac', 'Main.java'], capture_output=True, text=True)
    return result.returncode == 0

def test_vulnerability():
    if not compile_java():
        print("Compilation failed")
        return False
    
    # Test payloads that should extract data if vulnerable
    payloads = [
        "' or '1'='1",
        "admin' or '1'='1", 
        "' ] | //users/user/password | //user[username='",
        "//users/user/password"
    ]
    
    for payload in payloads:
        try:
            process = subprocess.Popen(['java', 'Main'], stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True)
            stdout, stderr = process.communicate(input=f"{payload}\ndummy\n", timeout=5)
            
            # Check if we got any of the known passwords in output
            if any(pwd in stdout for pwd in ['SuperSecret123!', 'MyPassword456', 'JanePass789']):
                print(f"VULNERABLE - Payload '{payload}' extracted passwords")
                return True
                
            # Check if we got any username in output  
            if any(user in stdout for user in ['admin', 'john_doe', 'jane_smith']):
                print(f"VULNERABLE - Payload '{payload}' extracted usernames")
                return True
                
        except Exception as e:
            continue
    
    print("NOT VULNERABLE - No credentials extracted")
    return False

if __name__ == "__main__":
    test_vulnerability()