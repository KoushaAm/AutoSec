FROM eclipse-temurin:17-jdk AS builder
LABEL org.opencontainers.image.source="https://github.com/jenkinsci/templating-engine-plugin"
LABEL org.opencontainers.image.description="Build environment for templating-engine-plugin_CVE-2025-31722_2.5.3 (180)"
LABEL org.opencontainers.image.title="templating-engine-plugin_CVE-2025-31722_2.5.3:180"
LABEL com.dataset.cve_id="CVE-2025-31722"
LABEL com.dataset.cwe_id="CWE-94"
LABEL com.dataset.cwe_name="CWE-94: Improper Control of Generation of Code ('Code Injection')"
LABEL com.dataset.advisory_id="GHSA-4vjp-327p-w4qv"
LABEL com.dataset.project_slug="templating-engine-plugin_CVE-2025-31722_2.5.3"
LABEL com.dataset.status="success"
WORKDIR /workspace
RUN set -eux; \
    if ! command -v git >/dev/null 2>&1; then \
      apt-get update && apt-get install -y --no-install-recommends git ca-certificates && rm -rf /var/lib/apt/lists/*; \
    fi

# Clone and checkout the desired revision
ARG GIT_URL=https://github.com/jenkinsci/templating-engine-plugin
ARG GIT_URL
ARG GIT_TAG=2.5.3
ARG GIT_COMMIT=0af836f6465f80a078a02c6f2ed2e93dd5056213
RUN set -eux; \
    git clone "$GIT_URL" repo; \
    cd repo; \
    if [ -n "$GIT_COMMIT" ]; then git checkout "$GIT_COMMIT"; elif [ -n "$GIT_TAG" ]; then git checkout "$GIT_TAG"; fi

# Use Gradle Wrapper if present
RUN set -eux; cd /workspace/repo; chmod +x gradlew || true; ./gradlew --no-daemon clean build -x test

# Use the builder stage as final image (contains sources and built artifacts)
FROM scratch AS artifact
COPY --from=builder /workspace/repo /repo
