FROM eclipse-temurin:17-jdk AS builder
LABEL org.opencontainers.image.source="https://github.com/apache/camel"
LABEL org.opencontainers.image.description="Build environment for camel_CVE-2025-30177_camel-4.10.2 (184)"
LABEL org.opencontainers.image.title="camel_CVE-2025-30177_camel-4.10.2:184"
LABEL com.dataset.cve_id="CVE-2025-30177"
LABEL com.dataset.cwe_id="CWE-164"
LABEL com.dataset.cwe_name="CWE-164: Improper Neutralization of Internal Special Elements"
LABEL com.dataset.advisory_id="GHSA-vq4p-pchp-6g6v"
LABEL com.dataset.project_slug="camel_CVE-2025-30177_camel-4.10.2"
LABEL com.dataset.status="success"
WORKDIR /workspace
RUN set -eux; \
    if ! command -v git >/dev/null 2>&1; then \
      apt-get update && apt-get install -y --no-install-recommends git ca-certificates && rm -rf /var/lib/apt/lists/*; \
    fi

# Install Maven 3.9.9 (required by Camel 4.10.2)
RUN set -eux; \
    apt-get update && apt-get install -y --no-install-recommends wget && \
    wget -O /tmp/maven.tar.gz https://archive.apache.org/dist/maven/maven-3/3.9.9/binaries/apache-maven-3.9.9-bin.tar.gz && \
    tar -xzf /tmp/maven.tar.gz -C /opt && \
    ln -s /opt/apache-maven-* /opt/maven && \
    rm /tmp/maven.tar.gz && \
    apt-get remove -y wget && \
    apt-get autoremove -y && \
    rm -rf /var/lib/apt/lists/*
ENV PATH=/opt/maven/bin:$PATH

# Clone and checkout the desired revision
ARG GIT_URL=https://github.com/apache/camel
ARG GIT_URL
ARG GIT_TAG=camel-4.10.2
ARG GIT_COMMIT=4ccb68b166c0d1210966f17d18b848cdd8b64fed
RUN set -eux; \
    git clone "$GIT_URL" repo; \
    cd repo; \
    if [ -n "$GIT_COMMIT" ]; then git checkout "$GIT_COMMIT"; elif [ -n "$GIT_TAG" ]; then git checkout "$GIT_TAG"; fi

# Prepare Maven local repository to avoid corrupted artifacts
RUN set -eux; rm -rf /root/.m2/repository || true

# Configure Maven settings to include Apache snapshots repository for fallback
RUN set -eux; mkdir -p /root/.m2; \
    cat > /root/.m2/settings.xml << 'EOF'
<?xml version="1.0" encoding="UTF-8"?>
<settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd">
  <profiles>
    <profile>
      <id>apache-snapshots</id>
      <repositories>
        <repository>
          <id>apache.snapshots</id>
          <name>Apache Snapshots Repository</name>
          <url>https://repository.apache.org/snapshots</url>
          <snapshots>
            <enabled>true</enabled>
          </snapshots>
          <releases>
            <enabled>false</enabled>
          </releases>
        </repository>
      </repositories>
      <pluginRepositories>
        <pluginRepository>
          <id>apache.snapshots</id>
          <name>Apache Snapshots Repository</name>
          <url>https://repository.apache.org/snapshots</url>
          <snapshots>
            <enabled>true</enabled>
          </snapshots>
          <releases>
            <enabled>false</enabled>
          </releases>
        </pluginRepository>
      </pluginRepositories>
    </profile>
  </profiles>
  <activeProfiles>
    <activeProfile>apache-snapshots</activeProfile>
  </activeProfiles>
</settings>
EOF
# Use Maven with debug logging and increased memory, skip BOM generation to avoid SNAPSHOT issues
RUN set -eux; cd /workspace/repo; \
    export MAVEN_OPTS='-Xmx2g -XX:+UseG1GC'; \
    mvn -B -e -X -U -DskipTests -Dbom.skip=true package || \
    (echo 'First build failed, retrying with clean and skipping BOM...' && mvn clean && mvn -B -e -X -U -DskipTests -Dbom.skip=true package) || \
    (echo 'Second build failed, trying with offline mode...' && mvn -B -e -o -DskipTests package)

# Use the builder stage as final image (contains sources and built artifacts)
FROM scratch AS artifact
COPY --from=builder /workspace/repo /repo
