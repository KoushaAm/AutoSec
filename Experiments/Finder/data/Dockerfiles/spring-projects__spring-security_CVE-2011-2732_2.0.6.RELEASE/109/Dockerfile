FROM eclipse-temurin:8-jdk AS builder
LABEL org.opencontainers.image.source="https://github.com/spring-projects/spring-security"
LABEL org.opencontainers.image.description="Build environment for spring-projects__spring-security_CVE-2011-2732_2.0.6.RELEASE (109)"
LABEL org.opencontainers.image.title="spring-projects__spring-security_CVE-2011-2732_2.0.6.RELEASE:109"
LABEL com.dataset.cve_id="CVE-2011-2732"
LABEL com.dataset.cwe_id="CWE-094"
LABEL com.dataset.cwe_name="Improper Control of Generation of Code ('Code Injection')"
LABEL com.dataset.advisory_id="GHSA-5xm9-rf63-wj7h"
LABEL com.dataset.project_slug="spring-projects__spring-security_CVE-2011-2732_2.0.6.RELEASE"
LABEL com.dataset.status="success"
WORKDIR /workspace
RUN set -eux; \
    if ! command -v git >/dev/null 2>&1; then \
      apt-get update && apt-get install -y --no-install-recommends git ca-certificates && rm -rf /var/lib/apt/lists/*; \
    fi

# Install Maven 3.5.0
RUN set -eux; \
    apt-get update && apt-get install -y --no-install-recommends wget && \
    wget -O /tmp/maven.tar.gz https://archive.apache.org/dist/maven/maven-3/3.5.0/binaries/apache-maven-3.5.0-bin.tar.gz && \
    tar -xzf /tmp/maven.tar.gz -C /opt && \
    ln -s /opt/apache-maven-* /opt/maven && \
    rm /tmp/maven.tar.gz && \
    apt-get remove -y wget && \
    apt-get autoremove -y && \
    rm -rf /var/lib/apt/lists/*
ENV PATH=/opt/maven/bin:$PATH

# Clone and checkout the desired revision
ARG GIT_URL=https://github.com/spring-projects/spring-security
ARG GIT_URL
ARG GIT_TAG=2.0.6.RELEASE
ARG GIT_COMMIT=beb0ec4ba95265a7e3481b3eb8d87f3b922733ae
RUN set -eux; \
    git clone "$GIT_URL" repo; \
    cd repo; \
    if [ -n "$GIT_COMMIT" ]; then git checkout "$GIT_COMMIT"; elif [ -n "$GIT_TAG" ]; then git checkout "$GIT_TAG"; fi

# Prepare Maven local repository to avoid corrupted artifacts
RUN set -eux; rm -rf /root/.m2/repository || true

# Create Maven settings.xml to redirect SpringSource repositories
RUN set -eux; mkdir -p /root/.m2; \
    cat > /root/.m2/settings.xml << 'EOF'
<?xml version="1.0" encoding="UTF-8"?>
<settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0 
                              https://maven.apache.org/xsd/settings-1.0.0.xsd">
  <mirrors>
    <!-- Redirect all SpringSource repository requests to Maven Central -->
    <mirror>
      <id>central-mirror</id>
      <name>Maven Central Mirror</name>
      <url>https://repo1.maven.org/maven2</url>
      <mirrorOf>com.springsource.repository.maven.milestone</mirrorOf>
    </mirror>
    <mirror>
      <id>spring-milestone-mirror</id>
      <name>Spring Milestone Mirror</name>
      <url>https://repo.spring.io/milestone</url>
      <mirrorOf>repository.springsource.com</mirrorOf>
    </mirror>
    <!-- Catch-all for any other SpringSource references -->
    <mirror>
      <id>central-catchall</id>
      <name>Maven Central Catchall</name>
      <url>https://repo1.maven.org/maven2</url>
      <mirrorOf>*springsource*</mirrorOf>
    </mirror>
  </mirrors>
  <profiles>
    <profile>
      <id>override-repos</id>
      <repositories>
        <repository>
          <id>central</id>
          <url>https://repo1.maven.org/maven2</url>
          <releases><enabled>true</enabled></releases>
          <snapshots><enabled>false</enabled></snapshots>
        </repository>
        <repository>
          <id>spring-milestone</id>
          <url>https://repo.spring.io/milestone</url>
          <releases><enabled>true</enabled></releases>
          <snapshots><enabled>false</enabled></snapshots>
        </repository>
      </repositories>
      <pluginRepositories>
        <pluginRepository>
          <id>central</id>
          <url>https://repo1.maven.org/maven2</url>
          <releases><enabled>true</enabled></releases>
          <snapshots><enabled>false</enabled></snapshots>
        </pluginRepository>
        <pluginRepository>
          <id>spring-milestone</id>
          <url>https://repo.spring.io/milestone</url>
          <releases><enabled>true</enabled></releases>
          <snapshots><enabled>false</enabled></snapshots>
        </pluginRepository>
      </pluginRepositories>
    </profile>
  </profiles>
  <activeProfiles>
    <activeProfile>override-repos</activeProfile>
  </activeProfiles>
</settings>
EOF

# Use Maven - build only core modules, skip Bundlor plugin
RUN set -eux; cd /workspace/repo; mvn -B -e -U -DskipTests -Dmaven.plugin.validation=BRIEF -Dmaven.wagon.http.retryHandler.count=2 -DfailIfNoTests=false -Denforcer.skip=true -Dmaven.javadoc.skip=true -Dbundlor.skip=true compile || \
    mvn -B -e -DskipTests -Dmaven.plugin.validation=BRIEF -Dcom.springsource.bundlor.maven.skip=true --projects spring-security-parent,core -am compile || \
    mvn -B -e -DskipTests -Dmaven.plugin.validation=BRIEF -rf core compile

# Use the builder stage as final image (contains sources and built artifacts)
FROM scratch AS artifact
COPY --from=builder /workspace/repo /repo
