FROM eclipse-temurin:8-jdk AS builder
LABEL org.opencontainers.image.source="https://github.com/spring-projects/spring-framework"
LABEL org.opencontainers.image.description="Build environment for spring-projects__spring-framework_CVE-2022-22965_5.2.19.RELEASE (105)"
LABEL org.opencontainers.image.title="spring-projects__spring-framework_CVE-2022-22965_5.2.19.RELEASE:105"
LABEL com.dataset.cve_id="CVE-2022-22965"
LABEL com.dataset.cwe_id="CWE-094"
LABEL com.dataset.cwe_name="Improper Control of Generation of Code ('Code Injection')"
LABEL com.dataset.advisory_id="GHSA-36p3-wjmg-h94x"
LABEL com.dataset.project_slug="spring-projects__spring-framework_CVE-2022-22965_5.2.19.RELEASE"
LABEL com.dataset.status="success"
WORKDIR /workspace
RUN set -eux; \
    if ! command -v git >/dev/null 2>&1; then \
      apt-get update && apt-get install -y --no-install-recommends git ca-certificates && rm -rf /var/lib/apt/lists/*; \
    fi

# Clone and checkout the desired revision
ARG GIT_URL=https://github.com/spring-projects/spring-framework
ARG GIT_URL
ARG GIT_TAG=5.2.19.RELEASE
ARG GIT_COMMIT=925b07826067d57a8a057837a1b5973cb6fad186
RUN set -eux; \
    git clone "$GIT_URL" repo; \
    cd repo; \
    if [ -n "$GIT_COMMIT" ]; then git checkout "$GIT_COMMIT"; elif [ -n "$GIT_TAG" ]; then git checkout "$GIT_TAG"; fi

# Use Gradle Wrapper if present
RUN set -eux; cd /workspace/repo; chmod +x gradlew || true; ./gradlew --no-daemon clean build -x test

# Use the builder stage as final image (contains sources and built artifacts)
FROM scratch AS artifact
COPY --from=builder /workspace/repo /repo
