diff --git a/build.gradle b/build.gradle
index 6998e7c..52dff56 100644
--- a/build.gradle
+++ b/build.gradle
@@ -1,14 +1,18 @@
 buildscript {
     repositories {
+//         mavenLocal()
+//         jcenter()
+//         maven {
+//             url "https://plugins.gradle.org/m2/"
+//         }
         mavenLocal()
-        jcenter()
-        maven {
-            url "https://plugins.gradle.org/m2/"
-        }
+        mavenCentral()
+        gradlePluginPortal()
     }
 
     dependencies {
-        classpath 'org.gretty:gretty:3.0.1'
+//         classpath 'org.gretty:gretty:3.0.1'
+        classpath 'org.gretty:gretty:3.0.6'
         classpath 'io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.21.2'
         classpath 'de.marcphilipp.gradle:nexus-publish-plugin:0.4.0'
         classpath "gradle.plugin.com.github.spotbugs:spotbugs-gradle-plugin:2.0.0"
@@ -51,12 +55,16 @@ task appRun(type: AppStartTask) {
 configure(subprojects.findAll { ['core', 'examples', 'docs'].contains(it.name) }) {
     repositories {
         mavenLocal()
-        maven { url "http://download.osgeo.org/webdav/geotools" }
+//         maven { url "http://download.osgeo.org/webdav/geotools" }
+//         maven { url "https://maven.scijava.org/content/repositories/public/" }
+        maven { url "https://repo.osgeo.org/repository/release/" }
+        maven { url "https://jaspersoft.jfrog.io/jaspersoft/third-party-ce-artifacts" }
+        maven { url "https://nexus.terrestris.de/repository/public/" }
         mavenCentral()
-        maven { url "https://dl.bintray.com/readytalk/maven" }
-        maven { url "http://jaspersoft.artifactoryonline.com/jaspersoft/third-party-ce-artifacts" }
-        maven { url "https://repo.boundlessgeo.com/main/" }
-        maven { url "https://jaspersoft.artifactoryonline.com/jaspersoft/jr-ce-releases" }
+//         maven { url "https://dl.bintray.com/readytalk/maven" }
+//         maven { url "http://jaspersoft.artifactoryonline.com/jaspersoft/third-party-ce-artifacts" }
+//         maven { url "https://repo.boundlessgeo.com/main/" }
+//         maven { url "https://jaspersoft.artifactoryonline.com/jaspersoft/jr-ce-releases" }
         maven { url "https://repository.jboss.org/nexus/content/repositories/thirdparty-releases/" }
     }
 }
diff --git a/core/build.gradle b/core/build.gradle
index 9bba89d..b9218fe 100644
--- a/core/build.gradle
+++ b/core/build.gradle
@@ -112,7 +112,7 @@ dependencies {
     def springSecurityVersion = '5.2.1.RELEASE'
     def slf4jVersion = '1.7.30'
     def metricsVersion = '4.1.2'
-    def geotoolsVersion = '22.2'
+    def geotoolsVersion = '25.2'
 
     compile(
             "org.springframework:spring-context:$project.springVersion",
diff --git a/core/src/main/java/org/mapfish/print/cli/CliServletContext.java b/core/src/main/java/org/mapfish/print/cli/CliServletContext.java
index c1a01c8..c0d0eee 100644
--- a/core/src/main/java/org/mapfish/print/cli/CliServletContext.java
+++ b/core/src/main/java/org/mapfish/print/cli/CliServletContext.java
@@ -283,4 +283,33 @@ public final class CliServletContext implements ServletContext {
     public String getVirtualServerName() {
         return null;
     }
+
+    @Override
+    public void setResponseCharacterEncoding(final String enc) {}
+
+    @Override
+    public String getResponseCharacterEncoding() {
+        return null;
+    }
+
+    @Override
+    public void setRequestCharacterEncoding(final String enc) {}
+
+    @Override
+    public String getRequestCharacterEncoding() {
+        return null;
+    }
+
+    @Override
+    public void setSessionTimeout(final int timeout) {}
+
+    @Override
+    public int getSessionTimeout() {
+        return 0;
+    }
+
+    @Override
+    public javax.servlet.ServletRegistration.Dynamic addJspFile(String p1, String p2) {
+        return null;
+    }
 }
